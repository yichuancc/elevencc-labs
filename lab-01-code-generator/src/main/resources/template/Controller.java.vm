package ${package}.${moduleName}.controller;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.xnewtech.xplatform.swift.base.pojo.page.LayuiPageFactory;
import com.xnewtech.xplatform.swift.core.base.controller.BaseController;
import com.xnewtech.xplatform.swift.core.reqres.response.ResponseData;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Arrays;
import java.util.List;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Api(tags = "${comments}" )
@Slf4j
@RestController
@RequestMapping("/${pathName}" )
public class ${className}Controller extends BaseController {

    @Autowired
    private ${className}Service ${classname}Service;


    private Page<${className}> getPageContext() {
        return LayuiPageFactory.defaultPage();
    }

    /**
     * 分页列表查询
     *
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "分页列表查询" )
    @GetMapping(value = "/page" )
    public ResponseData<LayuiPageInfo> queryPageList(${className} ${classname}) {
        QueryWrapper<${className}> queryWrapper = new QueryWrapper<>();
        Page<${className}> page = getPageContext();
        IPage<${className}> pageList = ${classname}Service.page(page, queryWrapper);
        return ResponseData.success(LayuiPageFactory.createPageInfo(pageList));
    }

    /**
     * 列表查询
     *
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "列表查询" )
    @GetMapping(value = "/list" )
    public ResponseData<List<${className}>> queryList(${className} ${classname}) {
        QueryWrapper<${className}> queryWrapper = new QueryWrapper<>();
        List<${className}> pageList = ${classname}Service.list(queryWrapper);
        return ResponseData.success(pageList);
    }

    /**
     * 添加
     *
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "添加" )
    @PostMapping(value = "/save" )
    public ResponseData<${className}> save(@RequestBody ${className} ${classname}) {
        ${classname}Service.save(${classname});
        return ResponseData.success(${classname});
    }

    /**
     * 编辑
     *
     * @param ${classname}
     * @return
     */
    @ApiOperation(value = "编辑" )
    @PostMapping(value = "/edit" )
    public ResponseData<${className}> edit(@RequestBody ${className} ${classname}) {
        ${classname}Service.updateById(${classname});
        return ResponseData.success(${classname});
    }

    /**
     * 删除
     *
     * @param ids
     * @return
     */
    @ApiOperation(value = "批量删除")
    @PostMapping(value = "/delete")
    public ResponseData<?> delete(@RequestParam(name = "ids") String ids) {
        ${classname}Service.removeByIds(Arrays.asList(ids.split(",")));
        return ResponseData.success();
    }

    /**
     * 通过id查询详情
     *
     * @param id
     * @return
     */
    @ApiOperation(value = "通过id查询详情")
    @GetMapping(value = "/detail")
    public ResponseData<${className}> queryById(@RequestParam(name = "id") String id) {
        ${className} ${classname} = ${classname}Service.getById(id);
        return ResponseData.success(${classname});
    }


}
